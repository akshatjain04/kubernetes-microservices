build:
  type: text
  content: |-
    #!/bin/sh

    # make all
    # docker build
deploy:
  type: text
  content: |+
    #/bin/sh
    <<'###'
    Sample Deploy Instructions

    HELM_OPTS="--set clusterIP=${ROOST_CLUSTER_IP},tag=${ROOST_NAMESPACE},namespace=${ROOST_NAMESPACE}"

    helm install <helm-folder> -n <ns> $HELM_OPTS

    kubectl apply -f <file>.yaml
    ###

test: []
uninstall:
  type: text
  content: |+
    #!/bin/sh

dockerCompose: ''
app_dependencies:
  type: text
  content: |-
    #!/bin/sh

    # make all
    # docker build
app_deploy:
  type: text
  content: |
    #/bin/sh
    <<'###'
    Sample Deploy Instructions
    HELM_OPTS="--set clusterIP=${ROOST_CLUSTER_IP},tag=${ROOST_NAMESPACE},namespace=${ROOST_NAMESPACE}"

    helm install <helm-folder> -n <ns> $HELM_OPTS

    kubectl apply -f <file>.yaml
    ###


    kubectl apply -n $ROOST_NAMESPACE -f kubernetes/backend-api-1.deploy.yaml

    kubectl apply -n $ROOST_NAMESPACE -f kubernetes/backend-api-1.svc.yaml

    kubectl apply -n $ROOST_NAMESPACE -f kubernetes/backend-api-2.azure.deploy.yaml

    kubectl apply -n $ROOST_NAMESPACE -f kubernetes/backend-api-2.deploy.yaml

    kubectl apply -n $ROOST_NAMESPACE -f kubernetes/backend-api-2.svc.yaml

    kubectl apply -n $ROOST_NAMESPACE -f kubernetes/frontend.azure.deploy.yaml

    kubectl apply -n $ROOST_NAMESPACE -f kubernetes/frontend.deploy.yaml

    kubectl apply -n $ROOST_NAMESPACE -f kubernetes/frontend.svc.yaml

    kubectl apply -n $ROOST_NAMESPACE -f kubernetes/ingress.azure.yaml
app_test: []
app_uninstall:
  type: None
  content: ''
app_docker_compose: ''
lastUpdatedBy: Akshat Jain
lastUpdatedOn: 2023-01-12T11:01:50.561Z
